version: "3.6"
services:
  influxdb:
    image: influxdb:alpine
    deploy:
      replicas: 1
      endpoint_mode: vip
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '1'
          memory: 256M
    ports:
      - target: 8086
        published: 8086
    volumes:
      - type: volume
        source: influxdb
        target: /var/lib/influxdb
      - type: bind
        source: ./config/influxdb.conf
        target: /etc/influxdb/influxdb.conf
        bind:
          readonly: true
      - type: bind
        source: ./config/influxdb-default.conf
        target: /etc/influxdb/influxdb-default.conf
        bind:
          readonly: true
      - type: bind
        source: ./config/influxdb-init
        target: /docker-entrypoint-initdb.d
        bind:
          readonly: true
      - type: bind
        source: ./config/entrypoint-fix.sh
        target: /entrypoint-fix.sh
        bind:
          readonly: true
      - type: bind
        source: ./config/init-influxdb-fix.sh
        target: /init-influxdb-fix.sh
        bind:
          readonly: true
    entrypoint: /entrypoint-fix.sh
    command: influxd -config /etc/influxdb/influxdb.conf
    networks:
      - influxdb
      - main
    restart: always

  grafana:
    image: grafana/grafana:latest
    deploy:
      replicas: 1
      endpoint_mode: vip
      resources:
        limits:
          cpus: '1'
          memory: 128M
    ports:
      - target: 3000
        published: 14001
    volumes:
      - type: volume
        source: grafana
        target: /var/lib/grafana
    env_file: ./config/env/grafana.env
    networks:
      - main
    restart: always

  kapacitor:
    image: kapacitor:alpine
    deploy:
      replicas: 1
      endpoint_mode: vip
      resources:
        limits:
          cpus: '1'
          memory: 128M
    ports:
      - target: 9092
        published: 9092
    volumes:
      - type: volume
        source: kapacitor
        target: /var/lib/kapacitor
      - type: bind
        source: ./config/kapacitor.conf
        target: /etc/kapacitor/kapacitor.conf
        bind:
          readonly: true
    env_file: ./config/env/grafana.env
    networks:
      - influxdb
    restart: always

  chronograf:
    image: chronograf:alpine
    deploy:
      replicas: 1
      endpoint_mode: vip
      resources:
        limits:
          cpus: '1'
          memory: 128M
    ports:
      - target: 8888
        published: 14002
    volumes:
      - type: volume
        source: chronograf
        target: /var/lib/chronograf
    env_file: ./config/env/chronograf.env
    networks:
      - main
      - influxdb
    restart: always

  telegraf:
    image: telegraf:alpine
    deploy:
      replicas: 1
      endpoint_mode: vip
      resources:
        limits:
          cpus: '1'
          memory: 128M
    volumes:
      - type: bind
        source: ./config/telegraf.conf
        target: /etc/telegraf/telegraf.conf
        bind:
          readonly: true
      - type: bind
        source: /proc
        target: /host/proc
        bind:
          readonly: true
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        bind:
          readonly: false
      - type: bind
        source: /var/run/utmp
        target: /var/run/utmp
        bind:
          readonly: true
    env_file: ./config/env/grafana.env
    networks:
      - influxdb
    restart: always
volumes:
  influxdb:
    external: false
  grafana:
    external: false
  kapacitor:
    external: false
  chronograf:
    external: false

networks:
  main:
    driver: overlay
    attachable: true
  influxdb:
    driver: overlay
    attachable: true
